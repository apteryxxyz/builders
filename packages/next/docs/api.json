{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.36.4",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/apteryxxyz/builders/tree/main/packages/next",
  "kind": "Package",
  "canonicalReference": "@builders/next!",
  "docComment": "",
  "name": "@builders/next",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@builders/next!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@builders/next!ApiError:class",
          "docComment": "/**\n * Custom error class that represents an error that is thrown by either an API route or a server action.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ApiError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "version-af8c9dac.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ApiError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@builders/next!ApiError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ApiError` class\n *\n * @param status - The HTTP status code to hint what kind of error this is.\n *\n * @param message - A human-readable message that describes the error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n    status: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", \n    message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "status",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ApiError.fromObject:member(1)",
              "docComment": "/**\n * Creates an instance of this error from a plain object.\n *\n * @param object - The plain object to create an instance from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromObject(object: "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ApiError",
                  "canonicalReference": "@builders/next!ApiError:class"
                },
                {
                  "kind": "Content",
                  "text": "['toObject']>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ApiError",
                  "canonicalReference": "@builders/next!ApiError:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromObject"
            },
            {
              "kind": "Property",
              "canonicalReference": "@builders/next!ApiError#message:member",
              "docComment": "/**\n * A human-readable message that describes the error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@builders/next!ApiError#status:member",
              "docComment": "/**\n * The HTTP status code to hint what kind of error this is.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly status: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ApiError#toObject:member(1)",
              "docComment": "/**\n * Converts this error to a plain object that can be serialised to JSON.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toObject(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        status: number;\n        message: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toObject"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@builders/next!ApiRoute:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace ApiRoute "
            }
          ],
          "fileUrlPath": "version-af8c9dac.d.ts",
          "releaseTag": "Public",
          "name": "ApiRoute",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.ExtractBody:type",
              "docComment": "/**\n * Extracts the request body type from a API route.\n *\n * @typeParam TApiRoute - The type of the API route.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ExtractBody<TApiRoute> = "
                },
                {
                  "kind": "Content",
                  "text": "TApiRoute extends "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRoute",
                  "canonicalReference": "@builders/next!ApiRoute:type"
                },
                {
                  "kind": "Content",
                  "text": "<infer _1, infer _2, infer U, infer _3> ? U : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ExtractBody",
              "typeParameters": [
                {
                  "typeParameterName": "TApiRoute",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.ExtractData:type",
              "docComment": "/**\n * Extracts the data type from a API route.\n *\n * @typeParam TApiRoute - The type of the API route.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ExtractData<TApiRoute> = "
                },
                {
                  "kind": "Content",
                  "text": "TApiRoute extends "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRoute",
                  "canonicalReference": "@builders/next!ApiRoute:type"
                },
                {
                  "kind": "Content",
                  "text": "<infer _1, infer _2, infer _3, infer U> ? U : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ExtractData",
              "typeParameters": [
                {
                  "typeParameterName": "TApiRoute",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.ExtractParams:type",
              "docComment": "/**\n * Extracts the URL parameters type from a API route.\n *\n * @typeParam TApiRoute - The type of the API route.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ExtractParams<TApiRoute> = "
                },
                {
                  "kind": "Content",
                  "text": "TApiRoute extends "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRoute",
                  "canonicalReference": "@builders/next!ApiRoute:type"
                },
                {
                  "kind": "Content",
                  "text": "<infer U, infer _1, infer _2, infer _3> ? U : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ExtractParams",
              "typeParameters": [
                {
                  "typeParameterName": "TApiRoute",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.ExtractPayload:type",
              "docComment": "/**\n * Extracts the request payload type from a API route.\n *\n * @typeParam TApiRoute - The type of the API route.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ExtractPayload<TApiRoute> = "
                },
                {
                  "kind": "Content",
                  "text": "TApiRoute extends "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRoute",
                  "canonicalReference": "@builders/next!ApiRoute:type"
                },
                {
                  "kind": "Content",
                  "text": "<infer U, infer V, infer W, infer _1> ? "
                },
                {
                  "kind": "Reference",
                  "text": "RequestPayload",
                  "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<U, V, W> : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ExtractPayload",
              "typeParameters": [
                {
                  "typeParameterName": "TApiRoute",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.ExtractSearch:type",
              "docComment": "/**\n * Extracts the URL search parameters type from a API route.\n *\n * @typeParam TApiRoute - The type of the API route.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ExtractSearch<TApiRoute> = "
                },
                {
                  "kind": "Content",
                  "text": "TApiRoute extends "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRoute",
                  "canonicalReference": "@builders/next!ApiRoute:type"
                },
                {
                  "kind": "Content",
                  "text": "<infer _1, infer U, infer _2, infer _3> ? U : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ExtractSearch",
              "typeParameters": [
                {
                  "typeParameterName": "TApiRoute",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type",
              "docComment": "/**\n * Represents the request payload of an API route.\n *\n * @typeParam TParams - The type of the route's URL parameters.\n *\n * @typeParam TSearch - The type of the route's URL search parameters.\n *\n * @typeParam TBody - The type of the route's request body.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type RequestPayload<TParams, TSearch, TBody> = "
                },
                {
                  "kind": "Content",
                  "text": "TParams extends undefined ? TSearch extends undefined ? TBody extends undefined ? {\n        params?: undefined;\n        search?: undefined;\n        body?: undefined;\n    } : {\n        params?: undefined;\n        search?: undefined;\n        body: TBody;\n    } : TBody extends undefined ? {\n        params?: undefined;\n        search: TSearch;\n        body?: undefined;\n    } : {\n        params?: undefined;\n        search: TSearch;\n        body: TBody;\n    } : TSearch extends undefined ? TBody extends undefined ? {\n        params: TParams;\n        search?: undefined;\n        body?: undefined;\n    } : {\n        params: TParams;\n        search?: undefined;\n        body: TBody;\n    } : TBody extends undefined ? {\n        params: TParams;\n        search: TSearch;\n        body?: undefined;\n    } : {\n        params: TParams;\n        search: TSearch;\n        body: TBody;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "RequestPayload",
              "typeParameters": [
                {
                  "typeParameterName": "TParams",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TSearch",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TBody",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.ResponsePayload:type",
              "docComment": "/**\n * Represents the response payload of a API route.\n *\n * @typeParam TData - The type of the data returned by the route.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ResponsePayload<TData> = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        success: true;\n        data: TData;\n    } | {\n        success: false;\n        error: "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ApiError",
                  "canonicalReference": "@builders/next!ApiError:class"
                },
                {
                  "kind": "Content",
                  "text": "['toObject']>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ResponsePayload",
              "typeParameters": [
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.WithoutPayload:type",
              "docComment": "/**\n * See {@link ApiRoute} for documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type WithoutPayload<TData> = "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NextResponse",
                  "canonicalReference": "next!NextResponse:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResponsePayload",
                  "canonicalReference": "@builders/next!ApiRoute.ResponsePayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "WithoutPayload",
              "typeParameters": [
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ApiRoute.WithPayload:type",
              "docComment": "/**\n * See {@link ApiRoute} for documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type WithPayload<TParams, TSearch, TBody, TData> = "
                },
                {
                  "kind": "Content",
                  "text": "(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestPayload",
                  "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<TParams, TSearch, TBody>) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NextResponse",
                  "canonicalReference": "next!NextResponse:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResponsePayload",
                  "canonicalReference": "@builders/next!ApiRoute.ResponsePayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "WithPayload",
              "typeParameters": [
                {
                  "typeParameterName": "TParams",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TSearch",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TBody",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@builders/next!ApiRoute:type",
          "docComment": "/**\n * An API route is a function that can be accessed by the client using the fetch API. This type represents a built API route.\n *\n * @remarks\n *\n * API routes built using the {@link ApiRouteBuilder} are callable from the server by simply passing the payload as an argument.\n *\n * @typeParam TParams - The type of the route's URL parameters.\n *\n * @typeParam TSearch - The type of the route's URL search parameters.\n *\n * @typeParam TBody - The type of the route's request body.\n *\n * @typeParam TData - The type of the data returned by the route.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ApiRoute<TParams, TSearch, TBody, TData> = "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<TParams | TSearch | TBody, undefined> extends never ? "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.WithoutPayload",
              "canonicalReference": "@builders/next!ApiRoute.WithoutPayload:type"
            },
            {
              "kind": "Content",
              "text": "<TData> : "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.WithPayload",
              "canonicalReference": "@builders/next!ApiRoute.WithPayload:type"
            },
            {
              "kind": "Content",
              "text": "<TParams, TSearch, TBody, TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "version-af8c9dac.d.ts",
          "releaseTag": "Public",
          "name": "ApiRoute",
          "typeParameters": [
            {
              "typeParameterName": "TParams",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TSearch",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TBody",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@builders/next!ApiRouteBuilder:class",
          "docComment": "/**\n * A builder for easily creating API routes with params, search and body validation, error handling, and complete type safety.\n *\n * @remarks\n *\n * There are four ways you could use your new API route:\n *\n * 1. Manual Fetch: You can make a fetch request to the API route directly in your code, although it's recommended to consider any one of the following options.\n *\n * 2. `executeApiRoute` Function: A function which wraps on the server the API route and manages success status handling.\n *\n * 3. `useApiRouteQuery` Hook: Similar to the `useQuery` hook in `react-query`, but note that it is not identical.\n *\n * 4. `useApiRouteMutation` Hook: Similar to the `useMutation` hook in `react-query`, but note that it is not identical.\n *\n * @example\n * ```ts\n * import { ApiRouteBuilder } from '@builders/next/server';\n * import { z } from 'zod';\n *\n * export const POST = new ApiRouteBuilder()\n *   .setParams(z.object({ id: z.string() }))\n *   .setBody('application/json', z.object({ title: z.string() }))\n *   .setDefinition(({ params, body }) => ({ id: params.id, title: body.title }));\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ApiRouteBuilder<TOptions extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRouteBuilderOptions",
              "canonicalReference": "@builders/next!ApiRouteBuilderOptions:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "server/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TOptions",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "ApiRouteBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@builders/next!ApiRouteBuilder:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ApiRouteBuilder` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Content",
                  "text": "TOptions"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ApiRouteBuilder#setBody:member(1)",
              "docComment": "/**\n * Sets the request body schema for the API route as a string.\n *\n * @param accepts - The accepted content type of the request body.\n *\n * @param body - The request body Zod string schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setBody<TAccepts extends "
                },
                {
                  "kind": "Content",
                  "text": "'text/plain'"
                },
                {
                  "kind": "Content",
                  "text": ", TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodString",
                  "canonicalReference": "zod!ZodString:class"
                },
                {
                  "kind": "Content",
                  "text": ">(accepts: "
                },
                {
                  "kind": "Content",
                  "text": "TAccepts"
                },
                {
                  "kind": "Content",
                  "text": ", body: "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRouteBuilder",
                  "canonicalReference": "@builders/next!ApiRouteBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions, 'body'> & {\n        body: {\n            accepts: TAccepts;\n            schema: TSchema;\n        };\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TAccepts",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "accepts",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "body",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setBody"
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ApiRouteBuilder#setBody:member(2)",
              "docComment": "/**\n * Sets the request body schema for the API route as a JSON Object.\n *\n * @param accepts - The accepted content type of the request body.\n *\n * @param body - The request body Zod schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setBody<TAccepts extends "
                },
                {
                  "kind": "Content",
                  "text": "'application/json'"
                },
                {
                  "kind": "Content",
                  "text": ", TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodTypeAny",
                  "canonicalReference": "zod!ZodTypeAny:type"
                },
                {
                  "kind": "Content",
                  "text": ">(accepts: "
                },
                {
                  "kind": "Content",
                  "text": "TAccepts"
                },
                {
                  "kind": "Content",
                  "text": ", body: "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRouteBuilder",
                  "canonicalReference": "@builders/next!ApiRouteBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions, 'body'> & {\n        body: {\n            accepts: TAccepts;\n            schema: TSchema;\n        };\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TAccepts",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "accepts",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "body",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setBody"
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ApiRouteBuilder#setDefinition:member(1)",
              "docComment": "/**\n * Sets the function definition of the API route, this method builds the action and must be called last.\n *\n * @param definition - The function definition.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDefinition<TParams extends "
                },
                {
                  "kind": "Content",
                  "text": "TOptions['params'] extends "
                },
                {
                  "kind": "Reference",
                  "text": "z.AnyZodObject",
                  "canonicalReference": "zod!AnyZodObject:type"
                },
                {
                  "kind": "Content",
                  "text": " ? "
                },
                {
                  "kind": "Reference",
                  "text": "z.input",
                  "canonicalReference": "zod!input:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions['params']> : undefined"
                },
                {
                  "kind": "Content",
                  "text": ", TSearch extends "
                },
                {
                  "kind": "Content",
                  "text": "TOptions['search'] extends "
                },
                {
                  "kind": "Reference",
                  "text": "z.AnyZodObject",
                  "canonicalReference": "zod!AnyZodObject:type"
                },
                {
                  "kind": "Content",
                  "text": " ? "
                },
                {
                  "kind": "Reference",
                  "text": "z.input",
                  "canonicalReference": "zod!input:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions['search']> : undefined"
                },
                {
                  "kind": "Content",
                  "text": ", TBody extends "
                },
                {
                  "kind": "Content",
                  "text": "TOptions['body'] extends {\n        schema: "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodTypeAny",
                  "canonicalReference": "zod!ZodTypeAny:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } ? "
                },
                {
                  "kind": "Reference",
                  "text": "z.input",
                  "canonicalReference": "zod!input:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions['body']['schema']> : undefined"
                },
                {
                  "kind": "Content",
                  "text": ", TData, TPayload extends "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRoute.RequestPayload",
                  "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<TParams, TSearch, TBody> & {\n        request?: "
                },
                {
                  "kind": "Reference",
                  "text": "NextRequest",
                  "canonicalReference": "next!NextRequest:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRoute.RequestPayload",
                  "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<TParams, TSearch, TBody> & {\n        request?: "
                },
                {
                  "kind": "Reference",
                  "text": "NextRequest",
                  "canonicalReference": "next!NextRequest:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ">(definition: "
                },
                {
                  "kind": "Content",
                  "text": "(payload: TPayload) => "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@builders/next!~Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRoute",
                  "canonicalReference": "@builders/next!ApiRoute:type"
                },
                {
                  "kind": "Content",
                  "text": "<TParams, TSearch, TBody, TData>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TParams",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TSearch",
                  "constraintTokenRange": {
                    "startIndex": 7,
                    "endIndex": 12
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TBody",
                  "constraintTokenRange": {
                    "startIndex": 13,
                    "endIndex": 18
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TPayload",
                  "constraintTokenRange": {
                    "startIndex": 19,
                    "endIndex": 23
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 24,
                    "endIndex": 28
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 33,
                "endIndex": 35
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "definition",
                  "parameterTypeTokenRange": {
                    "startIndex": 29,
                    "endIndex": 32
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefinition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ApiRouteBuilder#setParams:member(1)",
              "docComment": "/**\n * Sets the URL parameters schema for the API route.\n *\n * @param params - The URL parameters Zod object schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setParams<TParams extends "
                },
                {
                  "kind": "Reference",
                  "text": "z.AnyZodObject",
                  "canonicalReference": "zod!AnyZodObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodRecord",
                  "canonicalReference": "zod!ZodRecord:class"
                },
                {
                  "kind": "Content",
                  "text": ">(params: "
                },
                {
                  "kind": "Content",
                  "text": "TParams"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRouteBuilder",
                  "canonicalReference": "@builders/next!ApiRouteBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions, \"params\"> & {\n        params: TParams;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TParams",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setParams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ApiRouteBuilder#setSearch:member(1)",
              "docComment": "/**\n * Sets the URL search parameters schema for the API route.\n *\n * @param search - The URL search parameters Zod object or record schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSearch<TSearch extends "
                },
                {
                  "kind": "Reference",
                  "text": "z.AnyZodObject",
                  "canonicalReference": "zod!AnyZodObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodRecord",
                  "canonicalReference": "zod!ZodRecord:class"
                },
                {
                  "kind": "Content",
                  "text": ">(search: "
                },
                {
                  "kind": "Content",
                  "text": "TSearch"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ApiRouteBuilder",
                  "canonicalReference": "@builders/next!ApiRouteBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions, \"search\"> & {\n        search: TSearch;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSearch",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "search",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setSearch"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!ApiRouteBuilderOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ApiRouteBuilderOptions "
            }
          ],
          "fileUrlPath": "server/index.d.ts",
          "releaseTag": "Public",
          "name": "ApiRouteBuilderOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!ApiRouteBuilderOptions#body:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "body?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        accepts: "
                },
                {
                  "kind": "Reference",
                  "text": "Transform.SupportedContentType",
                  "canonicalReference": "@builders/next!Transform.SupportedContentType:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        schema: "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodTypeAny",
                  "canonicalReference": "zod!ZodTypeAny:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "body",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!ApiRouteBuilderOptions#params:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params?: "
                },
                {
                  "kind": "Reference",
                  "text": "z.AnyZodObject",
                  "canonicalReference": "zod!AnyZodObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodRecord",
                  "canonicalReference": "zod!ZodRecord:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!ApiRouteBuilderOptions#search:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "search?: "
                },
                {
                  "kind": "Reference",
                  "text": "z.AnyZodObject",
                  "canonicalReference": "zod!AnyZodObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodRecord",
                  "canonicalReference": "zod!ZodRecord:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "search",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!executeApiRoute:function(1)",
          "docComment": "/**\n * Immediately a fetch request to an API route, returns the data if successful, otherwise throws an error.\n *\n * @param method - The HTTP method to use.\n *\n * @param path - The path of the route to invoke.\n *\n * @typeParam TApiRoute - The type of the route to invoke, required to infer the payload and data types.\n *\n * @example\n * ```tsx\n * import { executeApiRoute } from '@builders/next/client';\n * import type { GET } from '@/app/posts/[id]/route';\n *\n * export default async function ViewPostPage({ params }: { params: { id: string } }) {\n *   const post = await executeApiRoute<typeof GET>('GET', `/api/posts/${params.id}`);\n *\n *   return <div>{JSON.stringify(post)}</div>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function executeApiRoute<TApiRoute extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.WithoutPayload",
              "canonicalReference": "@builders/next!ApiRoute.WithoutPayload:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", TData = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractData",
              "canonicalReference": "@builders/next!ApiRoute.ExtractData:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ">(method: "
            },
            {
              "kind": "Content",
              "text": "'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "method",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TApiRoute",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            }
          ],
          "name": "executeApiRoute"
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!executeApiRoute:function(2)",
          "docComment": "/**\n * Immediately a fetch request to an API route with a payload, returns the data if successful, otherwise throws an error.\n *\n * @param method - The HTTP method to use.\n *\n * @param path - The path of the route to invoke.\n *\n * @param payload - The payload to pass to the route.\n *\n * @typeParam TApiRoute - The type of the route to invoke, required to infer the payload and data types.\n *\n * @example\n * ```tsx\n * import { executeApiRoute } from '@builders/next/client';\n * import type { PUT } from '@/app/posts/route';\n * export default function CreatePostPage() {\n *   return <button onClick={() => executeApiRoute<PUT>('PUT', '/api/posts', { body: { title: 'Hello World' } })}>Create Post</button>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function executeApiRoute<TApiRoute extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.WithPayload",
              "canonicalReference": "@builders/next!ApiRoute.WithPayload:type"
            },
            {
              "kind": "Content",
              "text": "<any, any, any, any>"
            },
            {
              "kind": "Content",
              "text": ", TParams = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractParams",
              "canonicalReference": "@builders/next!ApiRoute.ExtractParams:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TSearch = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractSearch",
              "canonicalReference": "@builders/next!ApiRoute.ExtractSearch:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TBody = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractBody",
              "canonicalReference": "@builders/next!ApiRoute.ExtractBody:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TPayload extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.RequestPayload",
              "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
            },
            {
              "kind": "Content",
              "text": "<TParams, TSearch, TBody>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.RequestPayload",
              "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
            },
            {
              "kind": "Content",
              "text": "<TParams, TSearch, TBody>"
            },
            {
              "kind": "Content",
              "text": ", TData = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractData",
              "canonicalReference": "@builders/next!ApiRoute.ExtractData:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ">(method: "
            },
            {
              "kind": "Content",
              "text": "'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", payload: "
            },
            {
              "kind": "Content",
              "text": "TPayload"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 28,
            "endIndex": 30
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "method",
              "parameterTypeTokenRange": {
                "startIndex": 22,
                "endIndex": 23
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 24,
                "endIndex": 25
              },
              "isOptional": false
            },
            {
              "parameterName": "payload",
              "parameterTypeTokenRange": {
                "startIndex": 26,
                "endIndex": 27
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TApiRoute",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TParams",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            },
            {
              "typeParameterName": "TSearch",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              }
            },
            {
              "typeParameterName": "TBody",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              }
            },
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "defaultTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 18
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 21
              }
            }
          ],
          "name": "executeApiRoute"
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!executeServerAction:function(1)",
          "docComment": "/**\n * Executes a server action, returns the data if successful, otherwise throws an error.\n *\n * @param action - The action to execute.\n *\n * @returns The data returned by the action if successful.\n *\n * @example\n * ```tsx\n * import { executeServerAction } from '@builders/next/client';\n * import { getPost } from '@/server/posts/actions';\n *\n * export async function ViewPostPage({ params }: { params: { id: string } }) {\n *\n *   const post = await executeServerAction(getPost, params.id);\n *   return <div>{JSON.stringify(post)}</div>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function executeServerAction<TData>(action: "
            },
            {
              "kind": "Reference",
              "text": "ServerAction.WithoutInput",
              "canonicalReference": "@builders/next!ServerAction.WithoutInput:type"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "action",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "executeServerAction"
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!executeServerAction:function(2)",
          "docComment": "/**\n * Executes a server action with an input, returns the data if successful, otherwise throws an error.\n *\n * @param action - The action to execute.\n *\n * @param input - The input to pass to the action.\n *\n * @returns The data returned by the action if successful.\n *\n * @example\n * ```tsx\n * import { executeServerAction } from '@builders/next/client';\n * import { createPost } from '@/server/posts/actions';\n *\n * export default async function CreatePostPage() {\n *   return <button onClick={() => executeServerAction(createPost, { title: 'Hello World' })}>Create Post</button>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function executeServerAction<TInput, TData>(action: "
            },
            {
              "kind": "Reference",
              "text": "ServerAction.WithInput",
              "canonicalReference": "@builders/next!ServerAction.WithInput:type"
            },
            {
              "kind": "Content",
              "text": "<TInput, TData>"
            },
            {
              "kind": "Content",
              "text": ", input: "
            },
            {
              "kind": "Content",
              "text": "TInput"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "action",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "input",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TInput",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "executeServerAction"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!MutationBaseResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface MutationBaseResult<TPayload, TData> "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MutationBaseResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#data:member",
              "docComment": "/**\n * The data returned from the mutation, if any.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "TData | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#error:member",
              "docComment": "/**\n * The error produced by the mutation, if any.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Reference",
                  "text": "ApiError",
                  "canonicalReference": "@builders/next!ApiError:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#isError:member",
              "docComment": "/**\n * Whether the mutation has errored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#isIdle:member",
              "docComment": "/**\n * Whether the mutation is currently idle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIdle: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isIdle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#isLoading:member",
              "docComment": "/**\n * Whether the mutation is currently loading.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#isSuccess:member",
              "docComment": "/**\n * Whether the mutation is finished successfully.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#mutate:member",
              "docComment": "/**\n * The function to call to trigger the mutation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mutate: "
                },
                {
                  "kind": "Content",
                  "text": "TPayload extends undefined ? () => void : (payload: TPayload) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mutate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#mutateAsync:member",
              "docComment": "/**\n * The function to call to trigger the mutation, and get the result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mutateAsync: "
                },
                {
                  "kind": "Content",
                  "text": "TPayload extends undefined ? () => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TData> : (payload: TPayload) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TData>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mutateAsync",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationBaseResult#status:member",
              "docComment": "/**\n * The current status of the mutation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'idle' | 'loading' | 'success' | 'error'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!MutationErrorResult:interface",
          "docComment": "/**\n * See {@link MutationBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface MutationErrorResult<TPayload, TData> extends "
            },
            {
              "kind": "Reference",
              "text": "MutationBaseResult",
              "canonicalReference": "@builders/next!MutationBaseResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MutationErrorResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationErrorResult#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationErrorResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Reference",
                  "text": "ApiError",
                  "canonicalReference": "@builders/next!ApiError:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationErrorResult#isError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationErrorResult#isIdle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIdle: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isIdle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationErrorResult#isLoading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationErrorResult#isSuccess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationErrorResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'error'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!MutationIdleResult:interface",
          "docComment": "/**\n * See {@link MutationBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface MutationIdleResult<TPayload, TData> extends "
            },
            {
              "kind": "Reference",
              "text": "MutationBaseResult",
              "canonicalReference": "@builders/next!MutationBaseResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MutationIdleResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationIdleResult#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationIdleResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationIdleResult#isError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationIdleResult#isIdle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIdle: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isIdle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationIdleResult#isLoading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationIdleResult#isSuccess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationIdleResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'idle'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!MutationPendingResult:interface",
          "docComment": "/**\n * See {@link MutationBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface MutationPendingResult<TPayload, TData> extends "
            },
            {
              "kind": "Reference",
              "text": "MutationBaseResult",
              "canonicalReference": "@builders/next!MutationBaseResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MutationPendingResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationPendingResult#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationPendingResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationPendingResult#isError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationPendingResult#isIdle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIdle: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isIdle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationPendingResult#isLoading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationPendingResult#isSuccess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationPendingResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'loading'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@builders/next!MutationResult:type",
          "docComment": "/**\n * See {@link MutationBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type MutationResult<TPayload, TData> = "
            },
            {
              "kind": "Reference",
              "text": "MutationIdleResult",
              "canonicalReference": "@builders/next!MutationIdleResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData> | "
            },
            {
              "kind": "Reference",
              "text": "MutationPendingResult",
              "canonicalReference": "@builders/next!MutationPendingResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData> | "
            },
            {
              "kind": "Reference",
              "text": "MutationSuccessResult",
              "canonicalReference": "@builders/next!MutationSuccessResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData> | "
            },
            {
              "kind": "Reference",
              "text": "MutationErrorResult",
              "canonicalReference": "@builders/next!MutationErrorResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "name": "MutationResult",
          "typeParameters": [
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!MutationSuccessResult:interface",
          "docComment": "/**\n * See {@link MutationBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface MutationSuccessResult<TPayload, TData> extends "
            },
            {
              "kind": "Reference",
              "text": "MutationBaseResult",
              "canonicalReference": "@builders/next!MutationBaseResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MutationSuccessResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationSuccessResult#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "TData"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationSuccessResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationSuccessResult#isError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationSuccessResult#isIdle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIdle: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isIdle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationSuccessResult#isLoading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationSuccessResult#isSuccess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!MutationSuccessResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'success'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!QueryBaseResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface QueryBaseResult<TData> "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "QueryBaseResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryBaseResult#data:member",
              "docComment": "/**\n * The data returned from the query, if any.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "TData | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryBaseResult#error:member",
              "docComment": "/**\n * The error produced by the query, if any.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Reference",
                  "text": "ApiError",
                  "canonicalReference": "@builders/next!ApiError:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryBaseResult#isError:member",
              "docComment": "/**\n * Whether the query has errored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryBaseResult#isLoading:member",
              "docComment": "/**\n * Whether the query is currently loading.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryBaseResult#isSuccess:member",
              "docComment": "/**\n * Whether the query is finished successfully.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryBaseResult#status:member",
              "docComment": "/**\n * The current status of the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'loading' | 'success' | 'error'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!QueryErrorResult:interface",
          "docComment": "/**\n * See {@link QueryBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface QueryErrorResult<TData> extends "
            },
            {
              "kind": "Reference",
              "text": "QueryBaseResult",
              "canonicalReference": "@builders/next!QueryBaseResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "QueryErrorResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryErrorResult#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryErrorResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Reference",
                  "text": "ApiError",
                  "canonicalReference": "@builders/next!ApiError:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryErrorResult#isError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryErrorResult#isLoading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryErrorResult#isSuccess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryErrorResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'error'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!QueryLoadingResult:interface",
          "docComment": "/**\n * See {@link QueryBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface QueryLoadingResult<TData> extends "
            },
            {
              "kind": "Reference",
              "text": "QueryBaseResult",
              "canonicalReference": "@builders/next!QueryBaseResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "QueryLoadingResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryLoadingResult#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryLoadingResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryLoadingResult#isError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryLoadingResult#isLoading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryLoadingResult#isSuccess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QueryLoadingResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'loading'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@builders/next!QueryResult:type",
          "docComment": "/**\n * See {@link QueryBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type QueryResult<TData> = "
            },
            {
              "kind": "Reference",
              "text": "QueryLoadingResult",
              "canonicalReference": "@builders/next!QueryLoadingResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TData> | "
            },
            {
              "kind": "Reference",
              "text": "QuerySuccessResult",
              "canonicalReference": "@builders/next!QuerySuccessResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TData> | "
            },
            {
              "kind": "Reference",
              "text": "QueryErrorResult",
              "canonicalReference": "@builders/next!QueryErrorResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "name": "QueryResult",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!QuerySuccessResult:interface",
          "docComment": "/**\n * See {@link QueryBaseResult} for documentation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface QuerySuccessResult<TData> extends "
            },
            {
              "kind": "Reference",
              "text": "QueryBaseResult",
              "canonicalReference": "@builders/next!QueryBaseResult:interface"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "QuerySuccessResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QuerySuccessResult#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "TData"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QuerySuccessResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QuerySuccessResult#isError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QuerySuccessResult#isLoading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLoading: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QuerySuccessResult#isSuccess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSuccess: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSuccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!QuerySuccessResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "'success'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@builders/next!ServerAction:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace ServerAction "
            }
          ],
          "fileUrlPath": "version-af8c9dac.d.ts",
          "releaseTag": "Public",
          "name": "ServerAction",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ServerAction.ExtractData:type",
              "docComment": "/**\n * Extracts the data type from a server action.\n *\n * @typeParam TServerAction - The type of the server action.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ExtractData<TServerAction> = "
                },
                {
                  "kind": "Content",
                  "text": "TServerAction extends "
                },
                {
                  "kind": "Reference",
                  "text": "ServerAction",
                  "canonicalReference": "@builders/next!ServerAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<infer _1, infer U> ? U : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ExtractData",
              "typeParameters": [
                {
                  "typeParameterName": "TServerAction",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ServerAction.ExtractInput:type",
              "docComment": "/**\n * Extracts the input type from a server action.\n *\n * @typeParam TServerAction - The type of the server action.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ExtractInput<TServerAction> = "
                },
                {
                  "kind": "Content",
                  "text": "TServerAction extends "
                },
                {
                  "kind": "Reference",
                  "text": "ServerAction",
                  "canonicalReference": "@builders/next!ServerAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<infer U, infer _1> ? U : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ExtractInput",
              "typeParameters": [
                {
                  "typeParameterName": "TServerAction",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ServerAction.ResponsePayload:type",
              "docComment": "/**\n * Represents the response payload of a server action.\n *\n * @typeParam TData - The type of the data returned by the action.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ResponsePayload<TData> = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        success: true;\n        data: TData;\n    } | {\n        success: false;\n        error: "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ApiError",
                  "canonicalReference": "@builders/next!ApiError:class"
                },
                {
                  "kind": "Content",
                  "text": "['toObject']>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ResponsePayload",
              "typeParameters": [
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ServerAction.WithInput:type",
              "docComment": "/**\n * See {@link ServerAction} for documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type WithInput<TInput, TData> = "
                },
                {
                  "kind": "Content",
                  "text": "(input: TInput) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResponsePayload",
                  "canonicalReference": "@builders/next!ServerAction.ResponsePayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "WithInput",
              "typeParameters": [
                {
                  "typeParameterName": "TInput",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!ServerAction.WithoutInput:type",
              "docComment": "/**\n * See {@link ServerAction} for documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type WithoutInput<TData> = "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResponsePayload",
                  "canonicalReference": "@builders/next!ServerAction.ResponsePayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "WithoutInput",
              "typeParameters": [
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@builders/next!ServerAction:type",
          "docComment": "/**\n * A server action is a function that can be called from the client. It is executed on the server and returns a response. This type represents a built server action.\n *\n * @typeParam TInput - The type of the input to the action.\n *\n * @typeParam TData - The type of the data returned by the action.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ServerAction<TInput, TData> = "
            },
            {
              "kind": "Content",
              "text": "TInput extends undefined ? "
            },
            {
              "kind": "Reference",
              "text": "ServerAction.WithoutInput",
              "canonicalReference": "@builders/next!ServerAction.WithoutInput:type"
            },
            {
              "kind": "Content",
              "text": "<TData> : "
            },
            {
              "kind": "Reference",
              "text": "ServerAction.WithInput",
              "canonicalReference": "@builders/next!ServerAction.WithInput:type"
            },
            {
              "kind": "Content",
              "text": "<TInput, TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "version-af8c9dac.d.ts",
          "releaseTag": "Public",
          "name": "ServerAction",
          "typeParameters": [
            {
              "typeParameterName": "TInput",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@builders/next!ServerActionBuilder:class",
          "docComment": "/**\n * A builder for easily creating Next.js server actions with input validation, error handling, and complete type safety.\n *\n * @remarks\n *\n * There are four ways you could use your new server action:\n *\n * 1. Manual Call: You can use the server action like you normally would directly in your code, although it's recommended to consider any one of the following options.\n *\n * 2. `executeServerAction` Function: A function which wraps the server action and manages success and error handling.\n *\n * 3. `useServerActionQuery` Hook: This hook is akin to the `useQuery` hook in `react-query`, but note that it is not identical.\n *\n * 4. `useServerActionMutation` Hook: Similar to the `useMutation` hook in `react-query`, but with some differences.\n *\n * @example\n * ```ts\n * import { ServerActionBuilder } from '@builders/next/server';\n * import { z } from 'zod';\n *\n * export const getPost = new ServerActionBuilder()\n *   .setInput(z.string())\n *   .setDefinition(id => ({ id, title: 'Hello, world!' }));\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ServerActionBuilder<TOptions extends "
            },
            {
              "kind": "Reference",
              "text": "ServerActionBuilderOptions",
              "canonicalReference": "@builders/next!ServerActionBuilderOptions:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "server/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TOptions",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "ServerActionBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@builders/next!ServerActionBuilder:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ServerActionBuilder` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Content",
                  "text": "TOptions"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@builders/next!ServerActionBuilder#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly options: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ServerActionBuilder#setDefinition:member(1)",
              "docComment": "/**\n * Sets the function definition of the server action, this method builds the action and must be called last.\n *\n * @param definition - The function definition.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDefinition<TInput extends "
                },
                {
                  "kind": "Content",
                  "text": "TOptions['input'] extends "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodType",
                  "canonicalReference": "zod!ZodType:class"
                },
                {
                  "kind": "Content",
                  "text": " ? "
                },
                {
                  "kind": "Reference",
                  "text": "z.output",
                  "canonicalReference": "zod!output:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions['input']> : undefined"
                },
                {
                  "kind": "Content",
                  "text": ", TData>(definition: "
                },
                {
                  "kind": "Content",
                  "text": "(input: TInput) => "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@builders/next!~Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<TData>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ServerAction",
                  "canonicalReference": "@builders/next!ServerAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TInput, TData>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TInput",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "definition",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefinition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@builders/next!ServerActionBuilder#setInput:member(1)",
              "docComment": "/**\n * Sets the schema for the server action's input.\n *\n * @param input - The Zod schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setInput<TInput extends "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodTypeAny",
                  "canonicalReference": "zod!ZodTypeAny:type"
                },
                {
                  "kind": "Content",
                  "text": ">(input: "
                },
                {
                  "kind": "Content",
                  "text": "TInput"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ServerActionBuilder",
                  "canonicalReference": "@builders/next!ServerActionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<TOptions, \"input\"> & {\n        input: TInput;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TInput",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setInput"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@builders/next!ServerActionBuilderOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ServerActionBuilderOptions "
            }
          ],
          "fileUrlPath": "server/index.d.ts",
          "releaseTag": "Public",
          "name": "ServerActionBuilderOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@builders/next!ServerActionBuilderOptions#input:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "input?: "
                },
                {
                  "kind": "Reference",
                  "text": "z.ZodTypeAny",
                  "canonicalReference": "zod!ZodTypeAny:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "input",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@builders/next!Transform:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace Transform "
            }
          ],
          "fileUrlPath": "server/index.d.ts",
          "releaseTag": "Public",
          "name": "Transform",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@builders/next!Transform.determineContentType:function(1)",
              "docComment": "/**\n * Determines the content type of a request body.\n *\n * @param body - The request body.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function determineContentType(body: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SupportedContentType",
                  "canonicalReference": "@builders/next!Transform.SupportedContentType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "body",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "determineContentType"
            },
            {
              "kind": "Function",
              "canonicalReference": "@builders/next!Transform.insertParamsIntoPath:function(1)",
              "docComment": "/**\n * Inserts parameters into a path.\n *\n * @param path - The path to insert the parameters into.\n *\n * @param params - The parameters to insert.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function insertParamsIntoPath(path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "insertParamsIntoPath"
            },
            {
              "kind": "Function",
              "canonicalReference": "@builders/next!Transform.parseRequestBody:function(1)",
              "docComment": "/**\n * Extracts the request body from a request object.\n *\n * @param type - The expected content type.\n *\n * @param request - The request object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function parseRequestBody(type: "
                },
                {
                  "kind": "Reference",
                  "text": "SupportedContentType",
                  "canonicalReference": "@builders/next!Transform.SupportedContentType:type"
                },
                {
                  "kind": "Content",
                  "text": ", request: "
                },
                {
                  "kind": "Reference",
                  "text": "NextRequest",
                  "canonicalReference": "next!NextRequest:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "parseRequestBody"
            },
            {
              "kind": "Function",
              "canonicalReference": "@builders/next!Transform.stringifyRequestBody:function(1)",
              "docComment": "/**\n * Converts a body value to a string value that can be sent as a response with the given content type.\n *\n * @param type - The content type.\n *\n * @param data - The body value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function stringifyRequestBody(type: "
                },
                {
                  "kind": "Reference",
                  "text": "SupportedContentType",
                  "canonicalReference": "@builders/next!Transform.SupportedContentType:type"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "stringifyRequestBody"
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@builders/next!Transform.SupportedContentType:type",
              "docComment": "/**\n * A type union of the supported content types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type SupportedContentType = "
                },
                {
                  "kind": "Content",
                  "text": "(typeof "
                },
                {
                  "kind": "Reference",
                  "text": "supportedContentTypes",
                  "canonicalReference": "@builders/next!Transform.supportedContentTypes:var"
                },
                {
                  "kind": "Content",
                  "text": ")[number]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SupportedContentType",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@builders/next!Transform.supportedContentTypes:var",
              "docComment": "/**\n * List of the supported content types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "supportedContentTypes: "
                },
                {
                  "kind": "Content",
                  "text": "readonly [\"application/json\", \"text/plain\"]"
                }
              ],
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "supportedContentTypes",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!useApiRouteMutation:function(1)",
          "docComment": "/**\n * A hook to manage the mutation state of the API route request. This hook returns a object containing a `mutate` function that can be called to invoke the route.\n *\n * @param method - The HTTP method to use.\n *\n * @param path - The path of the route to invoke.\n *\n * @typeParam TApiRoute - The type of the route to invoke, required to infer the payload and data types.\n *\n * @example\n * ```tsx\n * import { useApiRouteMutation } from '@builders/next/client';\n * import type { PATCH } from '@/app/posts/[id]/route';\n *\n * export default function EditPostPage({ params }: { params: { id: string } }) {\n *   const { mutate, data, error, isIdle, isLoading, isError } =\n *     useApiRouteMutation<typeof PATCH>('PATCH', `/api/posts/[id]`, { params });\n *\n *   if (isIdle) return <button onClick={() => mutate({ body: { title: 'Hello, world!' } })}>Edit Post</button>;\n *   if (isLoading) return <div>Loading...</div>;\n *   if (isError) return <div>Error! {error.message}</div>;\n *   return <div>{JSON.stringify(data)}</div>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useApiRouteMutation<TApiRoute extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute",
              "canonicalReference": "@builders/next!ApiRoute:type"
            },
            {
              "kind": "Content",
              "text": "<any, any, any, any>"
            },
            {
              "kind": "Content",
              "text": ", TParams = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractParams",
              "canonicalReference": "@builders/next!ApiRoute.ExtractParams:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TSearch = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractSearch",
              "canonicalReference": "@builders/next!ApiRoute.ExtractSearch:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TBody = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractBody",
              "canonicalReference": "@builders/next!ApiRoute.ExtractBody:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TPayload extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.RequestPayload",
              "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
            },
            {
              "kind": "Content",
              "text": "<TParams, TSearch, TBody>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.RequestPayload",
              "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
            },
            {
              "kind": "Content",
              "text": "<TParams, TSearch, TBody>"
            },
            {
              "kind": "Content",
              "text": ", TData = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractData",
              "canonicalReference": "@builders/next!ApiRoute.ExtractData:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ">(method: "
            },
            {
              "kind": "Content",
              "text": "'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "MutationResult",
              "canonicalReference": "@builders/next!MutationResult:type"
            },
            {
              "kind": "Content",
              "text": "<TPayload, TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 26,
            "endIndex": 28
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "method",
              "parameterTypeTokenRange": {
                "startIndex": 22,
                "endIndex": 23
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 24,
                "endIndex": 25
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TApiRoute",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TParams",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            },
            {
              "typeParameterName": "TSearch",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              }
            },
            {
              "typeParameterName": "TBody",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              }
            },
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "defaultTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 18
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 21
              }
            }
          ],
          "name": "useApiRouteMutation"
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!useApiRouteQuery:function(1)",
          "docComment": "/**\n * A hook to invoke an API route and manage the query state of the request. The route is invoked immediately on mount.\n *\n * @param method - The HTTP method to use.\n *\n * @param path - The path of the route to invoke.\n *\n * @typeParam TApiRoute - The type of the route to invoke, required to infer the payload and data types.\n *\n * @example\n * ```tsx\n * import { useApiRouteQuery } from '@builders/next/client';\n * import type { GET } from '@/app/posts/route';\n *\n * export default function ViewPostsPage() {\n *   const { data, error, isLoading, isError } = useApiRouteQuery<typeof GET>('GET', '/api/posts');\n *\n *   if (isLoading) return <div>Loading...</div>;\n *   if (isError) return <div>Error! {error.message}</div>;\n *   return <div>{JSON.stringify(data)}</div>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useApiRouteQuery<TApiRoute extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.WithoutPayload",
              "canonicalReference": "@builders/next!ApiRoute.WithoutPayload:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", TData = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractData",
              "canonicalReference": "@builders/next!ApiRoute.ExtractData:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ">(method: "
            },
            {
              "kind": "Content",
              "text": "'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "QueryResult",
              "canonicalReference": "@builders/next!QueryResult:type"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "method",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TApiRoute",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            }
          ],
          "name": "useApiRouteQuery"
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!useApiRouteQuery:function(2)",
          "docComment": "/**\n * A hook to invoke an API route with a payload and manage the query state of the request. The route is invoked immediately on mount.\n *\n * @param method - The HTTP method to use.\n *\n * @param path - The path of the route to invoke.\n *\n * @param payload - The payload to pass to the route.\n *\n * @typeParam TApiRoute - The type of the route to invoke, required to infer the payload and data types.\n *\n * @example\n * ```tsx\n * import { useApiRouteQuery } from '@builders/next/client';\n * import type { GET } from '@/app/posts/[id]/route';\n *\n * export default function ViewPostPage({ params }: { params: { id: string } }) {\n *   const { data, error, isLoading, isError } = useApiRouteQuery<GET>('GET', `/api/posts/${params.id}`);\n *\n *   if (isLoading) return <div>Loading...</div>;\n *   if (isError) return <div>Error! {error.message}</div>;\n *   return <div>{JSON.stringify(data)}</div>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useApiRouteQuery<TApiRoute extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.WithPayload",
              "canonicalReference": "@builders/next!ApiRoute.WithPayload:type"
            },
            {
              "kind": "Content",
              "text": "<any, any, any, any>"
            },
            {
              "kind": "Content",
              "text": ", TParams = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractParams",
              "canonicalReference": "@builders/next!ApiRoute.ExtractParams:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TSearch = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractSearch",
              "canonicalReference": "@builders/next!ApiRoute.ExtractSearch:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TBody = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractBody",
              "canonicalReference": "@builders/next!ApiRoute.ExtractBody:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TData = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.ExtractData",
              "canonicalReference": "@builders/next!ApiRoute.ExtractData:type"
            },
            {
              "kind": "Content",
              "text": "<TApiRoute>"
            },
            {
              "kind": "Content",
              "text": ", TPayload extends "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.RequestPayload",
              "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
            },
            {
              "kind": "Content",
              "text": "<TParams, TSearch, TBody>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ApiRoute.RequestPayload",
              "canonicalReference": "@builders/next!ApiRoute.RequestPayload:type"
            },
            {
              "kind": "Content",
              "text": "<TParams, TSearch, TBody>"
            },
            {
              "kind": "Content",
              "text": ">(method: "
            },
            {
              "kind": "Content",
              "text": "'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", payload: "
            },
            {
              "kind": "Content",
              "text": "TPayload"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "QueryResult",
              "canonicalReference": "@builders/next!QueryResult:type"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 28,
            "endIndex": 30
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "method",
              "parameterTypeTokenRange": {
                "startIndex": 22,
                "endIndex": 23
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 24,
                "endIndex": 25
              },
              "isOptional": false
            },
            {
              "parameterName": "payload",
              "parameterTypeTokenRange": {
                "startIndex": 26,
                "endIndex": 27
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TApiRoute",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TParams",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            },
            {
              "typeParameterName": "TSearch",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              }
            },
            {
              "typeParameterName": "TBody",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              }
            },
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 16,
                "endIndex": 18
              },
              "defaultTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 21
              }
            }
          ],
          "name": "useApiRouteQuery"
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!useServerActionMutation:function(1)",
          "docComment": "/**\n * A hook to manage the mutation state of the server action request. This hook returns a object containing a `mutate` function that can be called to invoke the action.\n *\n * @param action - The action to execute.\n *\n * @example\n * ```tsx\n * import { useServerActionMutation } from '@builders/next/client';\n * import { updatePost } from '@/server/posts/actions';\n *\n * export default function EditPostPage({ params }: { params: { id: string } }) {\n *   const { mutate, data, error, isIdle, isLoading, isError } = useServerActionMutation(updatePost);\n *\n *   if (isIdle) return <button onClick={() => mutate({ id: params.id, title: 'Hello, world!' })}>Edit Post</button>;\n *   if (isLoading) return <div>Loading...</div>;\n *   if (isError) return <div>Error! {error.message}</div>;\n *   return <div>{JSON.stringify(data)}</div>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useServerActionMutation<TInput, TData>(action: "
            },
            {
              "kind": "Reference",
              "text": "ServerAction",
              "canonicalReference": "@builders/next!ServerAction:type"
            },
            {
              "kind": "Content",
              "text": "<TInput, TData>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "MutationResult",
              "canonicalReference": "@builders/next!MutationResult:type"
            },
            {
              "kind": "Content",
              "text": "<TInput, TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "action",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TInput",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useServerActionMutation"
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!useServerActionQuery:function(1)",
          "docComment": "/**\n * A hook to invoke a server action and manage the query state of the request. The action is invoked immediately on mount.\n *\n * @param action - The action to execute.\n *\n * @example\n * ```tsx\n * import { useServerActionQuery } from '@builders/next/client';\n * import { getPosts } from '@/server/posts/actions';\n *\n * export default function ViewPostsPage() {\n *   const { data, error, isLoading, isError } = useServerActionQuery(getPosts);\n *\n *   if (isLoading) return <div>Loading...</div>;\n *   if (isError) return <div>Error! {error.message}</div>;\n *   return <div>{JSON.stringify(data)}</div>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useServerActionQuery<TData>(action: "
            },
            {
              "kind": "Reference",
              "text": "ServerAction.WithoutInput",
              "canonicalReference": "@builders/next!ServerAction.WithoutInput:type"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "QueryResult",
              "canonicalReference": "@builders/next!QueryResult:type"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "action",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useServerActionQuery"
        },
        {
          "kind": "Function",
          "canonicalReference": "@builders/next!useServerActionQuery:function(2)",
          "docComment": "/**\n * A hook to invoke a server action with an input and manage the query state of the request. The action is invoked immediately on mount.\n *\n * @param action - The action to execute.\n *\n * @param input - The input to pass to the action.\n *\n * @example\n * ```tsx\n * import { useServerActionQuery } from '@builders/next/client';\n * import { getPost } from '@/server/posts/actions';\n *\n * export default function ViewPostPage({ params }: { params: { id: string } }) {\n *   const { data, isLoading, isError } = useServerActionQuery(getPost, params.id);\n *\n *   if (isLoading) return <div>Loading...</div>;\n *   if (isError) return <div>Error!</div>;\n *   return <div>{JSON.stringify(data)}</div>;\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useServerActionQuery<TInput, TData>(action: "
            },
            {
              "kind": "Reference",
              "text": "ServerAction.WithInput",
              "canonicalReference": "@builders/next!ServerAction.WithInput:type"
            },
            {
              "kind": "Content",
              "text": "<TInput, TData>"
            },
            {
              "kind": "Content",
              "text": ", input: "
            },
            {
              "kind": "Content",
              "text": "TInput"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "QueryResult",
              "canonicalReference": "@builders/next!QueryResult:type"
            },
            {
              "kind": "Content",
              "text": "<TData>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "client/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "action",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "input",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TInput",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TData",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useServerActionQuery"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@builders/next!version:var",
          "docComment": "/**\n * The version of the package.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "version: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "version-af8c9dac.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "version",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}
